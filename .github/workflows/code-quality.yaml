name: Rust clippy and format checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: extractions/setup-just@v2
      - uses: actions/checkout@v4
      - run: |
          just clippy-check-ci

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: extractions/setup-just@v2
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: DavidAnson/markdownlint-cli2-action@v9
        with:
          globs: "exercises/**/*.md"
      - name: Run cargo fmt
        run: |
          just fmt-check

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: extractions/setup-just@v2
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2
      - name: Run cargo test
        run: |
          just test
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: extractions/setup-just@v2
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - run: just clippy-check-sonar
      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v3
      - name: Run cargo-tarpaulin
        shell: bash
        run: |
          sonar-scanner -Dcommunity.rust.lcov.reportPaths=lcov.info -Dsonar.login=${{ secrets.SONAR_TOKEN }}
